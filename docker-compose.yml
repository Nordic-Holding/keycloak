services:
  postgres:
    image: postgres:15-alpine
    container_name: keycloak_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-keycloak}
      POSTGRES_USER: ${POSTGRES_USER:-keycloak}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-keycloak}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    container_name: keycloak
    restart: unless-stopped
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-keycloak}
      KC_DB_USERNAME: ${POSTGRES_USER:-keycloak}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-keycloak}

      # Hostname configuration (v2)
      KC_HOSTNAME: ${KC_HOSTNAME:-localhost}
      KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT:-false}

      # HTTP configuration
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED:-false}
      KC_HTTPS_PORT: ${KC_HTTPS_PORT:-8443}
      KC_HTTPS_KEY_STORE_FILE: /opt/keycloak/conf/server.keystore
      KC_HTTPS_KEY_STORE_PASSWORD: ${KC_HTTPS_KEY_STORE_PASSWORD:-password}

      # Admin user configuration
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}

      # Proxy configuration (if behind reverse proxy)
      KC_PROXY_HEADERS: ${KC_PROXY_HEADERS:-xforwarded}

      # Health and metrics (enabled during build)
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true

      # JVM memory settings
      JAVA_OPTS_KC_HEAP: ${JAVA_OPTS_KC_HEAP:--XX:MaxRAMPercentage=70 -XX:InitialRAMPercentage=50}
    ports:
      - "${KC_HTTPS_PORT:-8443}:8443"
      - "${KC_HTTP_PORT:-8080}:8080"
      - "${KC_METRICS_PORT:-9000}:9000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak_network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000 && echo -e 'GET /health/ready HTTP/1.1\\r\\nhost: 127.0.0.1:9000\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: ${KEYCLOAK_MEMORY_LIMIT:-2G}
        reservations:
          memory: ${KEYCLOAK_MEMORY_RESERVATION:-1G}

networks:
  keycloak_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
